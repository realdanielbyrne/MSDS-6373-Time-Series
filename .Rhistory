amodel$avar
d = 1
getSymbols("AAPL", src = "yahoo", from = start, to = end)
plotts.sample.wge(aapl)
aapl = AAPL$AAPL.Close
plotts.sample.wge(aapl)
ad1 = artrans.wge(aapl,phi.tr = 1)
aic.wge(ad1)
aic5.wge(ad1)
getSymbols("AAPL", src = "yahoo", from = start, to = end)
aapl = AAPL$AAPL.Close
plotts.sample.wge(aapl)
ad1 = artrans.wge(aapl,phi.tr = 1)
aic5.wge(ad1)
sd(ad1)^2
knitr::opts_chunk$set(echo = TRUE)
library(tswge)
library(tseries)
library(orcutt)
# Get quantmod
if (!require("quantmod")) {
install.packages("quantmod")
library(quantmod)
}
start <- as.Date("2016-01-01")
end <- as.Date("2019-10-01")
getSymbols("GOOGL", src = "yahoo", from = start, to = end)
googl
aic5.wge(xd1)
amodel = est.arma.wge(xd1,p=2,q=2)
amodel
xs4 = artrans.wge(googl,phi.tr = c(0,0,0,1),plottr = TRUE)
aic5.wge(xs4)
smodel = est.arma.wge(xs4,p=4,q=1)
est.arma.wge(xs4,p=4,q=1)
z <- fortify.zoo(googl, name = "Date")
x <- z$GOOGL.Close
t = seq(1,length(x),1)
df = data.frame(x = x, t= t)
fit = lm(x~t, data = df)
summary(fit)
cfit = cochrane.orcutt(fit)
summary(cfit)
aic5.wge(ad1)
sd(ad1)^2
knitr::opts_chunk$set(echo = TRUE)
library(tswge)
library(tseries)
library(orcutt)
# Get quantmod
if (!require("quantmod")) {
install.packages("quantmod")
library(quantmod)
}
start <- as.Date("2016-01-01")
end <- as.Date("2019-10-01")
getSymbols("GOOGL", src = "yahoo", from = start, to = end)
knitr::opts_chunk$set(echo = TRUE)
library(tswge)
library(tseries)
library(orcutt)
# Get quantmod
if (!require("quantmod")) {
install.packages("quantmod")
library(quantmod)
}
start <- as.Date("2016-01-01")
end <- as.Date("2019-10-01")
getSymbols("GOOGL", src = "yahoo", from = start, to = end)
googl = GOOGL$GOOGL.Close
plotts.sample.wge(googl)
knitr::opts_chunk$set(echo = TRUE)
library(tswge)
library(tseries)
library(orcutt)
# Get quantmod
if (!require("quantmod")) {
install.packages("quantmod")
library(quantmod)
}
start <- as.Date("2016-01-01")
end <- as.Date("2019-10-01")
getSymbols("GOOGL", src = "yahoo", from = start, to = end)
googl = GOOGL$GOOGL.Close
plotts.sample.wge(googl)
amodel$phi
amodel$theta
amodel$avar
xs4 = artrans.wge(googl,phi.tr = c(0,0,0,1),plottr = TRUE)
aic5.wge(xs4)
smodel = est.arma.wge(xs4,p=4,q=1)
plotts.sample.wge(smodel)
smodel = est.arma.wge(xs4,p=4,q=1)
gen.arima.wge(phi=smodel$phi,theta=smodel$theta)
gen.arima.wge(phi=smodel$phi,theta=smodel$theta,d=1)
gen.arima.wge(100,phi=smodel$phi,theta=smodel$theta,d=1)
fore.aruma.wge(googl,phi=smodel$phi,theta=smodel$theta)
fore.aruma.wge(googl,phi=smodel$phi,theta=smodel$theta, n.ahead = 20, lastn = TRUE)
fore.aruma.wge(googl,phi=smodel$phi,theta=smodel$theta, n.ahead = 40, lastn = TRUE)
u = mean(googl)
u
smodel = est.arma.wge(xs4,p=4,q=1)
xs4 = artrans.wge(googl,phi.tr = c(0,0,0,1),plottr = TRUE)
aic5.wge(xs4)
u = mean(googl)
u
smodel = est.arma.wge(xs4,p=4,q=1)
z <- fortify.zoo(googl, name = "Date")
x <- z$GOOGL.Close
t = seq(1,length(x),1)
df = data.frame(x = x, t= t)
fit = lm(x~t, data = df)
summary(fit)
googl = GOOGL$GOOGL.Close
plotts.sample.wge(googl)
fore.aruma.wge(googl,phi=smodel$phi,theta=smodel$theta,d=1,s=4,lastn=30,n.ahead = TRUE)
smodel = est.arma.wge(xs4,p=4,q=1)
fore.aruma.wge(googl,phi=smodel$phi,theta=smodel$theta,d=1,s=4,lastn=30,n.ahead = TRUE)
data(patemp)
plot(patemp)
plotts.wge(patemp)
knitr::opts_chunk$set(echo = TRUE)
library(tseries)
library(tswge)
library(mosaic)
f <- function(x) as.yearmon(format(x, nsmall = 2), "%Y.%m")
z <- read.csv("SN_m_tot_V2.0.csv", sep = ";", header = FALSE)
ase = function(f,s) {
l = length(f) - 1
ls = length(s)
ase = mean((f - s[(ls - l):ls])^2)
return (ase)
}
plotts.wge(x)
par(mfrow=c(1, 3))
x = z$V4
plotts.sample.wge(x)
plotts.wge(x)
aic5.wge(d10,p=0:20,q=0:10)
d10 = artrans.wge(d,phi.tr = c(0,0,0,0,0,0,0,0,0,1))
d10 = artrans.wge(d,phi.tr = c(0,0,0,0,0,0,0,0,0,1))
f21 = fore.aruma.wge(x,phi=m212$phi,theta=m212$theta,d=1,n.ahead=15*12, lastn = TRUE, limits= FALSE)
f21 = fore.aruma.wge(x,phi=m212$phi,theta=m212$theta,d=1,n.ahead=15*12, lastn = TRUE, limits= FALSE)
f21 = fore.aruma.wge(x,phi=m12$phi,theta=m12$theta,n.ahead=15*12, lastn = TRUE, limits= FALSE)
knitr::opts_chunk$set(echo = TRUE)
library(tseries)
library(tswge)
library(mosaic)
f <- function(x) as.yearmon(format(x, nsmall = 2), "%Y.%m")
z <- read.csv("SN_m_tot_V2.0.csv", sep = ";", header = FALSE)
ase = function(f,s) {
l = length(f) - 1
ls = length(s)
ase = mean((f - s[(ls - l):ls])^2)
return (ase)
}
par(mfrow=c(1, 3))
x = z$V4
plotts.sample.wge(x)
plotts.wge(x)
aic5.wge(x)
aic5.wge(x, type = "bic")
d = artrans.wge(x,phi.tr = 1)
aic5.wge(d)
m41 = est.arma.wge(x,p=4,q=1)
m12 = est.arma.wge(x,p=1,q=2)
m212 = est.arma.wge(d,p=2,q=2)
f = fore.aruma.wge(x,phi=m41$phi,theta=m41$theta,n.ahead=15*12, lastn = TRUE, limits= FALSE)
plotts.wge(x)
ase(f$f,x)
f21 = fore.aruma.wge(x,phi=m12$phi,theta=m12$theta,n.ahead=15*12, lastn = TRUE, limits= FALSE)
par(mfrow=c(1, 2))
plotts.wge(x)
ase(f21$f,x)
f21 = fore.aruma.wge(x,phi=m212$phi,theta=m212$theta,d=1,n.ahead=15*12, lastn = TRUE, limits= FALSE)
par(mfrow=c(1, 2))
plotts.wge(d)
ase(f21$f,x)
ljung.wge(m212$res)
plotts.wge(m212$res)
acf(m212$res)
d10 = artrans.wge(d,phi.tr = c(0,0,0,0,0,0,0,0,0,1))
aic5.wge(d10,p=0:20,q=0:10)
aic5.wge(d10,p=0:10,q=0:5)
d10 = artrans.wge(d,phi.tr = c(0,0,0,0,0,0,0,0,0,1))
aic5.wge(d10)
md10 = est.arma.wge(d10,p=1,q=2)
fd10 = fore.aruma.wge(x,phi=md10$phi,theta=md10$theta,d=1,s=10,n.ahead=15*12, lastn = TRUE, limits= FALSE)
ase(fd10$f,x)
plotts.sample.wge(md10$res)
aic5.wge(d10)
md10 = est.arma.wge(d10,p=1,q=2)
fd10 = fore.aruma.wge(x,phi=md10$phi,theta=md10$theta,d=1,s=10,n.ahead=15*12, lastn = TRUE, limits= FALSE)
ase(fd10$f,x)
plotts.sample.wge(md10$res)
ljung.wge(md10$res)
ljung.wge(model$res)
acf(model$res,lag.max = 50)
spike = read.csv("accuspike.csv")
plotts.sample.wge(spike$Active.Users)
aic5.wge(spike$Active.Users)
pacf(spike$Active.Users)
model = est.arma.wge(spike$Active.Users,p=5,q=1)
plotts.wge(model$res)
acf(model$res,lag.max = 50)
fore.aruma.wge(spike$Active.Users,phi = model$phi,theta = model$theta,s=7,lastn = TRUE,n.ahead=30, limits = FALSE)
d10 = artrans.wge(d,phi.tr = c(0,0,0,0,0,0,0,0,0,1))
aic5.wge(d10)
md10 = est.arma.wge(d10,p=1,q=2)
fd10 = fore.aruma.wge(x,phi=md10$phi,theta=md10$theta,d=1,s=10,n.ahead=15*12, lastn = TRUE, limits= FALSE)
ase(fd10$f,x)
plotts.sample.wge(md10$res)
ljung.wge(md10$res)
ljung.wge(md10$res)
?aic.wge
aic.wge(x)
install.packages("NNFOR")
install.packages("nnfor")
library(nnfor)
library(nnfor)
?mlp
#AIRLINE DATA
# First 108 months in the Training Set.
library(tswge)
library(nnfor)
set.seed(5)?mly
data(airlog)
lairTrain = ts(airlog[1:108], frequency = 12, start = c(1949, 1))
# Last 36 months in the Test set.
lairTest = ts(airlog[109:144], frequency = 12, start = c(1958, 1))
fit.mlp = mlp(lairTrain,difforder = c(12), reps = 100,hd.auto.type = "elm")
fit.mlp
plot(fit.mlp)
fore.mlp = forecast(fit.mlp, h = 36)
plot(fore.mlp)
ASE = mean((lairTest - fore.mlp$mean)^2)
ASE
fit.mlp = mlp(lairTrain,difforder = c(12), reps = 100,hd.auto.type = "cv")
fit.mlp
plot(fit.mlp)
fore.mlp = forecast(fit.mlp, h = 36)
plot(fore.mlp)
ASE = mean((lairTest - fore.mlp$mean)^2)
ASE
#With additional Regressors
set.seed(2)
tBS80 = ts(BS$sales[1:80])
tBSx = data.frame(ad_tv = ts(BS$ad_tv), ad_online = ts(BS$ad_online, frequency = 7),discount = ts(BS$discount))
fit3 = mlp(tBS80,xreg = tBSx,hd.auto.type = "cv")
#BS is the Business data
# Only Time as a regressor
tBS80 = ts(BS$sales[1:80])
#BS is the Business data
# Only Time as a regressor
tBS80 = ts(BS$sales[1:80])
source('~/GitHub/MSDS-6373-Time-Series/Unit 13/UNIT 13 R Code.R')
source('~/GitHub/MSDS-6373-Time-Series/utilities.r')
BS
setwd("~/GitHub/MSDS-6373-Time-Series/Unit 13")
setwd("~/GitHub/MSDS-6373-Time-Series")
source('~/GitHub/MSDS-6373-Time-Series/Unit 13/UNIT 13 R Code.R')
BSales = read.csv("businesssales.csv")
BS = read.csv("businesssales.csv")
#With additional Regressors
set.seed(2)
tBS80 = ts(BS$sales[1:80])
tBSx = data.frame(ad_tv = ts(BS$ad_tv), ad_online = ts(BS$ad_online, frequency = 7),discount = ts(BS$discount))
fit3 = mlp(tBS80,xreg = tBSx)
fit3
fit3 = mlp(tBS80,xreg = tBSx,hd.auto.type = "cv")
fit3
source('~/GitHub/MSDS-6373-Time-Series/Unit 13/UNIT 13 R Code.R')
ASE = mean((BS$sales[81:100]-f$mean)^2)
ASE
knitr::opts_chunk$set(echo = TRUE)
library(tswge)
library(nnfor)
ss = read.csv("Unit 13\Melanoma_Sunspot.csv")
knitr::opts_chunk$set(echo = TRUE)
library(tswge)
library(nnfor)
ss = read.csv("Unit 13/Melanoma_Sunspot.csv")
pol = read.csv("Unit 13/LA_Cmort_Study.csv")
swa = read.csv("Unit 13/swadelay.csv")
ss$Year
?ts
sstrain = ts(ss,start= c(1936,1),frequency = 1)
1972-8
ss$Melanoma
ss$Sunspot
ss
matrix(rnorm(300), 100, 3),
matrix(rnorm(300), 100, 3)
sstrain = ts(ss,start= c(1936,2),frequency = 12)
sstrain
sstrain = ts(ss,start= c(1936,2),frequency = 1)
sstrain = ts(ss,start= c(1936,2),frequency = 1)
sstrain
sstrain = ts(ss)
sstrain
sstrain = ts(ss, start = 1936)
sstrain
ss
sstrain = ts(ss[1:29],start= c(1936,2),frequency = 1)
ss
ss[1:29]
ss[,1:29]
ss[1:29,]
sstraintest = ts(ss[30:],start = c(1965,2),frequency = 1)
ss
sstraintest =  ts(ss[30:37,],start= c(1965,2),frequency = 1)
>mlp
?mlp
fit.mlp = mlp(sstrain,reps = 50,comb = "mean", hd.auto.type = "elm")
ss
fit.mlp = mlp(sstrain$sunspot,reps = 50,comb = "mean", hd.auto.type = "elm")
fit.mlp = mlp(sstrain,reps = 50,comb = "mean", hd.auto.type = "elm")
sstraintest =  ts(ss[30:37,],start= c(1965,1),frequency = 1)
sstrain = ts(ss[1:29,],start= c(1936,1),frequency = 1)
sstrain
fit.mlp = mlp(sstrain,reps = 50,comb = "mean", hd.auto.type = "elm")
sstrain = ts(ss[1:29,],start= c(1936,1),frequency = 1)
sstraintest =  ts(ss[30:37,],start= c(1965,1),frequency = 1)
set.seed(2)
fit.mlp = mlp(sstrain,reps = 50,comb = "mean", hd.auto.type = "elm")
#UNIT 13 R CODE
SWATrain = ts(SWA$arr_delay[1:141],start= c(2004,1),frequency = 12)
BS = read.csv(file.choose(), header = TRUE)
BS
#BS is the Business data
# Only Time as a regressor
tBS80 = ts(BS$sales[1:80])
tBS80
BS
sstrain = ts(ss$Sunspot[1:29,],start= c(1936,1),frequency = 1)
sstrain = ts(ss$Sunspot[1:29],start= c(1936,1),frequency = 1)
sstraintest =  ts(ss$Sunspot[30:37],start= c(1965,1),frequency = 1)
set.seed(2)
sstest =  ts(ss$Sunspot[30:37],start= c(1965,1),frequency = 1)
fit.mlp = mlp(sstrain,reps = 50,comb = "mean", hd.auto.type = "elm")
fit.mlp
plot(fit.mlp)
fore.mlp = forecast(fit.mlp, h = 36)
plot(fore.mlp)
ASE = mean((SWATest - fore.mlp$mean)^2)
ASE = mean((sstest - fore.mlp$mean)^2)
ASE
plot(fore.mlp)
melonoma_xts = ts(ss$Melanoma)
melonoma_xts
melonomatrain = ts(ss$Melonoma[1:29],start= c(1936,1),frequency = 1)
ss$Melonoma[1:29]
ss
ss$Melanoma
ss$Melanoma[1:29]
melonomatrain = ts(ss$Melanoma[1:29],start= c(1936,1),frequency = 1)
melonomatrain
fit.mlp = mlp(sstrain,reps = 50,comb = "mean", hd.auto.type = "elm", xreg = melonomatrain)
fit.mlp = mlp(sstrain, hd.auto.type = "elm", xreg = melonomatrain)
melonomatrain = data.frame(ts(ss$Melanoma[1:29],start= c(1936,1),frequency = 1))
fit.mlp = mlp(sstrain, hd.auto.type = "elm", xreg = melonomatrain)
fit.mlp
plot(fit.mlp)
fore.mlp = forecast(fit.mlp, h = 36)
fore.mlp = forecast(fit.mlp, h = 8)
plot(fit.mlp)
fit.mlp
ASE = mean((sstest - fore.mlp$mean)^2)
ASE
fore.mlp = forecast(fit.mlp, h = 8)
fore.mlp = forecast(fit.mlp, h = 8)
fore.mlp = forecast(fit.mlp, h = 8)
plot(fit.mlp)
plot(fit.mlp)
fore.mlp = forecast(fit.mlp, h = 8,xreg = melonomatrain)
?forecast
melonomatrain
melonomatrain = data.frame(ts(ss$Melanoma[1:29],start= c(1936,1),frequency = 1))
fit.mlp = mlp(sstrain, hd.auto.type = "elm", xreg = melonomatrain)
fit.mlp = mlp(sstrain, hd.auto.type = "elm", xreg = melonomatrain)
fit.mlp
fit.mlp
plot(fit.mlp)
fore.mlp = forecast(fit.mlp, h = 8,xreg = melonomatrain)
melonomatrain = data.frame(ts(ss$Melanoma,start= c(1936,1),frequency = 1))
fit.mlp = mlp(sstrain, hd.auto.type = "elm", xreg = melonomatrain)
fit.mlp = mlp(sstrain, hd.auto.type = "elm", xreg = melonomatrain)
fit.mlp
fit.mlp
plot(fit.mlp)
fore.mlp = forecast(fit.mlp, h = 8,xreg = melonomatrain)
plot(fore.mlp)
1936+29
ss[29]
ss[29,]
ASE = mean((sstest - fore.mlp$mean)^2)
ASE
sstrain = ts(ss$Sunspot[1:29],start= c(1936,1),frequency = 1)
sstest =  ts(ss$Sunspot[30:37],start= c(1965,1),frequency = 1)
set.seed(2)
melonomatrain = data.frame(ts(ss$Melanoma,start= c(1936,1),frequency = 1))
fit.mlp = mlp(sstrain, hd.auto.type = "elm", xreg = melonomatrain)
fit.mlp
plot(fit.mlp)
fore.mlp = forecast(fit.mlp, h = 8,xreg = melonomatrain)
plot(fore.mlp)
ASE = mean((sstest - fore.mlp$mean)^2)
ASE
sstrain = ts(ss$Melanoma[1:29],start= c(1936,1),frequency = 1)
sstest =  ts(ss$Melanoma[30:37],start= c(1965,1),frequency = 1)
set.seed(2)
melonomatrain = data.frame(ts(ss$Sunspot,start= c(1936,1),frequency = 1))
fit.mlp = mlp(sstrain, hd.auto.type = "elm", xreg = melonomatrain)
fit.mlp = mlp(sstrain, hd.auto.type = "elm", xreg = melonomatrain)
fit.mlp
plot(fit.mlp)
fore.mlp = forecast(fit.mlp, h = 8,xreg = melonomatrain)
fore.mlp = forecast(fit.mlp, h = 8,xreg = melonomatrain)
plot(fore.mlp)
ASE = mean((sstest - fore.mlp$mean)^2)
ASE
sstrain = ts(ss$Melanoma[1:29],start= c(1936,1),frequency = 1)
sstest =  ts(ss$Melanoma[30:37],start= c(1965,1),frequency = 1)
set.seed(2)
melonomatrain = data.frame(ts(ss$Sunspot,start= c(1936,1),frequency = 1))
fit.mlp = mlp(sstrain, hd.auto.type = "elm", xreg = melonomatrain)
fit.mlp
plot(fit.mlp)
fore.mlp = forecast(fit.mlp, h = 8,xreg = melonomatrain)
plot(fore.mlp)
ASE = mean((sstest - fore.mlp$mean)^2)
ASE
sstrain = ts(ss$Melanoma[1:29],start= c(1936,1),frequency = 1)
sstest =  ts(ss$Melanoma[30:37],start= c(1965,1),frequency = 1)
set.seed(2)
melonomatrain = data.frame(ts(ss$Sunspot,start= c(1936,1),frequency = 1))
fit.mlp = mlp(sstrain, hd.auto.type = "elm", xreg = melonomatrain)
fit.mlp
plot(fit.mlp)
fore.mlp = forecast(fit.mlp, h = 8,xreg = melonomatrain)
plot(fore.mlp, main="Melonoma Forecasts using Sunspot Yearly Data")
ASE = mean((sstest - fore.mlp$mean)^2)
ASE
?plot
sstrain = ts(ss$Melanoma[1:30],start= c(1936,1),frequency = 1)
sstest =  ts(ss$Melanoma[30:37],start= c(1965,1),frequency = 1)
set.seed(2)
melonomatrain = data.frame(ts(ss$Sunspot,start= c(1936,1),frequency = 1))
fit.mlp = mlp(sstrain, hd.auto.type = "elm", xreg = melonomatrain)
fit.mlp
plot(fit.mlp)
fore.mlp = forecast(fit.mlp, h = 8,xreg = melonomatrain)
sstrain = ts(ss$Melanoma[1:29],start= c(1936,1),frequency = 1)
sstest =  ts(ss$Melanoma[30:37],start= c(1965,1),frequency = 1)
set.seed(2)
melonomatrain = data.frame(ts(ss$Sunspot,start= c(1936,1),frequency = 1))
fit.mlp = mlp(sstrain, hd.auto.type = "elm", xreg = melonomatrain)
fit.mlp
plot(fit.mlp)
fore.mlp = forecast(fit.mlp, h = 8,xreg = melonomatrain)
plot(fore.mlp, main="Melonoma Forecasts using Sunspot Yearly Data")
ASE = mean((sstest - fore.mlp$mean)^2)
ASE
#AIRLINE DATA
# First 108 months in the Training Set.
library(tswge)
library(nnfor)
set.seed(5)
data(airlog)
lairTrain = ts(airlog[1:108], frequency = 12, start = c(1949, 1))
# Last 36 months in the Test set.
lairTest = ts(airlog[109:144], frequency = 12, start = c(1958, 1))
fit.mlp = mlp(lairTrain,difforder = c(12), reps = 100)
fit.mlp
plot(fit.mlp)
plot(fit.mlp)
fore.mlp = forecast(fit.mlp, h = 36)
plot(fore.mlp)
length(pol)
length(pol[,])
length(pol[:,])
length(pol[,:])
pol
250 + 258
pol = read.csv("Unit 13/LA_Cmort_Study.csv")
head(pol)
poltrail = ts(pol$cmort[1:498],frequency = 1)
sstest =  ts(pol$cmort[499:508],frequency = 1)
set.seed(2)
regs = data.frame(ts(pol$temp,frequency = 1),ts(pol$part,frequency = 1))
regs = data.frame(ts(pol$temp,frequency = 1),ts(pol$part,frequency = 1))
fit.mlp = mlp(sstrain, hd.auto.type = "elm", xreg = regs)
poltest =  ts(pol$cmort[499:508],frequency = 1)
regs = data.frame(ts(pol$temp,frequency = 1),ts(pol$part,frequency = 1))
fit.mlp = mlp(poltrail, hd.auto.type = "elm", xreg = regs)
fit.mlp = mlp(poltrail, hd.auto.type = "elm", xreg = regs)
fit.mlp
plot(fit.mlp)
fore.mlp = forecast(fit.mlp, h = 8,xreg = melonomatrain)
fore.mlp = forecast(fit.mlp, h = 10,xreg = regs)
plot(fore.mlp)
ASE = mean((sstest - fore.mlp$mean)^2)
ASE
train = ts(pol$cmort[1:498],frequency = 1)
test =  ts(pol$cmort[499:508],frequency = 1)
set.seed(2)
regs = data.frame(ts(pol$temp,frequency = 1),ts(pol$part,frequency = 1))
fit.mlp = mlp(train, hd.auto.type = "elm", xreg = regs)
fit.mlp
plot(fit.mlp)
fore.mlp = forecast(fit.mlp, h = 10,xreg = regs)
plot(fore.mlp)
